package ${satpPackage};

import com.clove.engine.exception.CloveException;
import com.clove.engine.impl.db.feature.orm.mybatis.ClovePage;
import ${satpPackage}.cfg.${Satp};
import ${satpPackage}.entity.${className};
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.List;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
public class ${className}Service extends ${Satp} {

	Logger log = LoggerFactory.getLogger(${className}Service.class);
	
	public ${className} find${className}(${className} ${classname}) throws CloveException{
        Integer ${pk.attrname} =${classname}.get${pk.attrName}();
		try {
			if (${pk.attrname} == null || ${pk.attrname} <= 0) {
				throw new CloveException("非法访问");
			}
			${classname} = findObject(${classname});
			log.info("查询${comments} ${pk.attrname}:"+${pk.attrname});
		} catch (Exception e) {
			e.printStackTrace();
			log.error("查询${comments}失败 ${pk.attrname}:"+${pk.attrname});
			throw new CloveException("查询${comments}失败");
		}
		return ${classname};

	}

	public List<${className}> select${className}List(${className} ${classname}) throws CloveException{
		List<${className}> list = null;
		try {
			list =  (List<${className}>) selectAll(${classname});
			log.info("查询${comments}列表");
		} catch (Exception e) {
			e.printStackTrace();
			log.error("查询${comments}列表失败");
			throw new CloveException("查询${comments}失败");
		}
		return list;
	}

	public List<${className}> select${className}List(ClovePage<${className}> clovePage,${className} ${classname}) throws CloveException{
		List<${className}> list = null;
		try {
			list =  (List<${className}>) selectPage(${classname},clovePage);
			log.info("分页查询${comments}列表");
		} catch (Exception e) {
			e.printStackTrace();
			log.error("分页查询${comments}列表失败");
			throw new CloveException("分页查询${comments}失败");
		}
		return list;
	}

	public void save${className}(${className} ${classname}) throws CloveException {
		Integer ${pk.attrname} =${classname}.get${pk.attrName}();
		try {
			if (${pk.attrname} == null || ${pk.attrname} <= 0) {
				${pk.attrname} = get${pk.attrName}();
			}
			${classname}.set${pk.attrName}(${pk.attrname});
			log.info("保存${comments} ${pk.attrname}:" + ${pk.attrname});
			saveObject(${classname});
		} catch (Exception e) {
			log.error("保存${comments}失败 ${pk.attrname}:" + ${pk.attrname});
			e.printStackTrace();
			throw new CloveException("保存${comments}失败");
		}
	}

	public void update${className}(${className} ${classname}) throws CloveException {
		Integer ${pk.attrname} =${classname}.get${pk.attrName}();
		try {
			if (${pk.attrname} == null || ${pk.attrname} <= 0) {
				throw new CloveException("非法访问");
			}
			log.info("修改${comments} ${pk.attrname}:" + ${pk.attrname});
			updateObject(${classname});
		} catch (Exception e) {
			log.error("修改${comments}失败 ${pk.attrname}:" + ${pk.attrname});
			e.printStackTrace();
			throw new CloveException("修改${comments}失败");
		}
	}

	public void delete${className}(${className} ${classname}) throws CloveException {
		Integer ${pk.attrname} =${classname}.get${pk.attrName}();
		try {
			if (${pk.attrname} == null || ${pk.attrname} <= 0) {
				throw new CloveException("非法访问");
			}
			log.info("删除${comments} ${pk.attrname}:" + ${pk.attrname});
			deleteObject(${classname});
		} catch (Exception e) {
			log.error("删除${comments}失败 ${pk.attrname}:" + ${pk.attrname});
			e.printStackTrace();
			throw new CloveException("删除${comments}失败");
		}
	}

	public Integer get${pk.attrName}() throws CloveException {
		return Integer.valueOf(getId("${pk.columnName}"));
	}
}
